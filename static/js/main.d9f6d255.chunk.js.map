{"version":3,"sources":["components/LeftColumn/ChatList/ChatBar/ChatBar.tsx","components/LeftColumn/ChatList/ChatList.tsx","components/LeftColumn/LeftColumn.tsx","components/RightColumn/Messages/Messages.tsx","components/RightColumn/RightColumn.tsx","components/Chat/Chat.mock.ts","components/Chat/Chat.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["ChatBar","selectedChatId","chatId","date","author","chatName","lastMessage","icon","selectChat","message","length","slice","trim","className","cx","onClick","src","alt","convertDate","split","reverse","join","ChatList","authors","chats","messages","chatList","useMemo","map","messagesId","chatMessages","dateMessages","authorId","name","sort","a","b","dateA","dateB","Date","parse","prepareChatList","key","LeftColumn","renderDateMessages","dateMessagesId","messageId","time","avatar","renderMessages","Messages","RightColumn","props","textareaRef","state","textareaValue","handleChange","event","setState","target","value","handleClick","chatIndex","sendMessage","nowDate","shortid","generate","getHours","getMinutes","getSeconds","handleResetTextareaValue","current","focus","renderPanel","ref","onChange","placeholder","React","createRef","this","prevProps","selectedChat","find","getChatMessages","findIndex","getIndexChatMessage","Component","CHATS","MESSAGES","loremIpsum","count","AUTHORS","Chat","componentDidMount","id","hanleSendMessage","hasCurrentDate","getDate","getMonth","getFullYear","newChatMessages","item","push","prevState","PureComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d9f6d255.chunk.js","sourcesContent":["import React from 'react'\nimport cx from 'classnames'\n\nimport './ChatBar.css'\n\ntype TProps = {\n    chatId: string,\n    selectedChatId: string,\n    author: string;\n    chatName: string;\n    date: string;\n    lastMessage: string;\n    icon: string;\n    selectChat: (id: string) => () => void;\n};\n\nexport const ChatBar = ({\n    selectedChatId,\n    chatId,\n    date = '01/05/2020',\n    author = 'Shrek 2',\n    chatName = 'Group Chat',\n    lastMessage = 'tas odio. Ut sit amet...',\n    icon = 'react',\n    selectChat\n}: TProps) => {\n    let message = lastMessage.length > 19\n        ? `${lastMessage.slice(0, 19).trim()}...`\n        : lastMessage\n\n    return (\n        <div\n            className={cx('bar', {\n                'bar_selected': chatId === selectedChatId\n            })}\n            onClick={selectChat(chatId)}\n        >\n            <div className={'bar__icon'}>\n                <img src={`icons/${icon}.svg`} alt={author}/>\n            </div>\n            <div className={'bar__message'}>\n                <div className={'bar__message__title'}>\n                    <h1 className={'bar__message__title__name'}>\n                        {chatName}\n                    </h1>\n                    <div className={'bar__message__title__date'}>\n                        {date}\n                    </div>\n                </div>\n                <div className={'bar__message__content'}>\n                    <span className='bar__message__content_author'>\n                        {author}:\n                    </span>\n                    {' '}{message}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { ChatBar } from 'components/LeftColumn/ChatList/ChatBar/ChatBar';\nimport {\n  TDataAuthors,\n  TDataChats,\n  TDataChatMesseges,\n  TDataChatsMesseges\n} from 'components/Chat/Chat'\n\nimport './ChatList.css'\n\nexport type TProps = {\n  selectedChatId: string;\n  authors: TDataAuthors,\n  chats: TDataChats,\n  messages: TDataChatsMesseges,\n  selectChat: (id: string) => () => void\n};\n\ntype TChatList = {\n  author: string,\n  chatId: string,\n  date: string,\n  chatName: string,\n  lastMessage: string,\n  icon: string\n}\n\nexport type DataChatList = TChatList[];\n\n// TODO use unix timestamp for date\nconst convertDate = (date: string): string => date\n  .split('/')\n  .reverse()\n  .join('-')\n\nconst prepareChatList = (\n  chats: TDataChats,\n  messages: TDataChatsMesseges,\n  authors: TDataAuthors\n) : DataChatList => chats\n      .map(({\n          chatId,\n          messagesId,\n          chatName = 'Group chat',\n          icon = 'react'\n      }) => {\n              const chatMessages: TDataChatMesseges = messages[messagesId]\n              const {\n                  dateMessages = [],\n                  date\n              } = chatMessages[chatMessages.length - 1]\n              const {\n                  authorId = 0,\n                  message = 'tas odio. Ut sit amet...'\n              } = dateMessages[dateMessages.length - 1]\n              const author = authors[authorId].name || 'Anonymous'\n\n              return ({\n                  author,\n                  chatId,\n                  date,\n                  chatName,\n                  lastMessage: message,\n                  icon\n          })\n      })\n      .sort((a, b) => {\n          const dateA = convertDate(a.date)\n          const dateB = convertDate(b.date)\n\n          return Date.parse(dateB) - Date.parse(dateA)\n      })\n\nexport const ChatList = ({\n  selectedChatId,\n  authors = [],\n  chats = [],\n  messages = [],\n  selectChat\n}: TProps) => {\n  const chatList = useMemo(() => prepareChatList(chats, messages, authors),\n    [chats, messages, authors]\n  )\n\n  return (\n    <div className=\"chatList\">\n      {chatList\n        .map(({\n                author,\n                chatId,\n                date,\n                chatName,\n                lastMessage,\n                icon\n            }) => (\n                <ChatBar\n                    key={chatId}\n                    chatId={chatId}\n                    selectedChatId={selectedChatId}\n                    author={author}\n                    date={date}\n                    chatName={chatName}\n                    lastMessage={lastMessage}\n                    icon={icon}\n                    selectChat={selectChat}\n                />\n            )\n        )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { ChatList } from 'components/LeftColumn/ChatList/ChatList';\nimport {\n  TDataAuthors,\n  TDataChats,\n  TDataChatsMesseges\n} from 'components/Chat/Chat'\n\nimport './LeftColumn.css'\n\ntype TProps = {\n  selectedChatId: string,\n  authors: TDataAuthors,\n  chats: TDataChats,\n  messages: TDataChatsMesseges,\n  selectChat: (id: string) => () => void\n};\n\n\nexport const LeftColumn = ({\n    selectedChatId,\n    authors,\n    chats,\n    messages,\n    selectChat\n}: TProps) => (\n    <div className='leftColumn'>\n      <ChatList\n        selectedChatId={selectedChatId}\n        authors={authors}\n        chats={chats}\n        messages={messages}\n        selectChat={selectChat}\n      />\n    </div>\n);\n","import React from 'react'\n\nimport {\n    TDataAuthors,\n    TDataChatMesseges,\n    TDateMessage\n} from 'components/Chat/Chat'\n\nimport './Messages.css'\n\ntype TDateMessages = TDateMessage[]\n\ntype TProps = {\n    authors: TDataAuthors,\n    chatMessages: TDataChatMesseges\n};\n\n// TODO вопрос: куда выносить константы\n// раньше выносил в mock, чтобы не было по 300+ строчек кода\nconst EMPTY_CHAT_TEXT = 'You have no messages yet'\n\nconst renderMessages = (\n    messages: TDateMessages,\n    authors: TDataAuthors\n) => messages.map(({\n    authorId,\n    messageId,\n    message,\n    time\n})  => {\n    const {\n        name = 'The Shrek 2',\n        avatar = '/react-messenger/images/shrek2.png'\n    } = authors[authorId]\n\n    return (\n        <div\n         className={'message'}\n         key={messageId}\n        >\n            <div className={'message__avatar'}>\n                <img src={`/react-messenger//images/${avatar}`} alt={name} />\n            </div>\n            <div className={'message__text'}>\n                <div className={'message__text__name'}>\n                    {name}\n                </div>\n                <div className={'message__text__message'}>\n                    {message}\n                </div>\n            </div>\n            <div className={'message__time'}>\n                {time}\n            </div>\n        </div>\n    )\n})\n\nconst renderDateMessages = (\n    chatMessages: TDataChatMesseges,\n    authors: TDataAuthors\n) => chatMessages.map(({\n    date,\n    dateMessagesId,\n    dateMessages\n})  => {\n    return (\n        <div\n            className={'dateMessages'}\n            key={dateMessagesId}\n        >\n            <div className={'dateMessages__date'}>\n                {date}\n            </div>\n            <div className={'dateMessages__messages'}>\n                {renderMessages(dateMessages, authors)}\n            </div>\n        </div>\n    )\n})\n\nexport const Messages = ({\n    authors = [],\n    chatMessages = []\n}: TProps) => (\n    <div className={'messages'}>\n        {chatMessages.length > 0\n            ? renderDateMessages(chatMessages, authors)\n            : (\n                <div  className={'messages__emptyChat'}>\n                    {EMPTY_CHAT_TEXT}\n                </div>\n            )\n        }\n    </div>\n);\n","import React, { Component } from 'react'\nimport shortid from 'shortid'\n\nimport { Messages } from './Messages/Messages'\n\nimport './RightColumn.css'\nimport {\n    TDataAuthors,\n    TDataChats,\n    TDataChatMesseges,\n    TDataChatsMesseges,\n    TDateMessage\n} from 'components/Chat/Chat'\n\nexport type TSendFuntion = (\n    message: TDateMessage,\n    chateMeassages: TDataChatMesseges,\n    chatIndex: number\n) => void\n\ntype TProps = {\n    selectedChatId: string,\n    authors: TDataAuthors,\n    chats: TDataChats,\n    messages: TDataChatsMesseges,\n    sendMessage: TSendFuntion\n};\n\ntype TState = {\n    textareaValue: string\n}\n\nconst getIndexChatMessage = (\n    selectedChatId: string,\n    chats: TDataChats = []\n) : number => chats.findIndex(\n    ({ chatId }: {\n        chatId: string\n    }) => chatId === selectedChatId\n);\n\nconst getChatMessages = (\n    selectedChatId: string,\n    chats: TDataChats = [],\n    messages: TDataChatsMesseges = []\n) : TDataChatMesseges => {\n    let selectedChat\n    if (selectedChatId) {\n        selectedChat = chats.find(\n            ({ chatId }: {\n                chatId: string\n            }) => chatId === selectedChatId\n        )\n   }\n\n    if (selectedChat) {\n        return messages[selectedChat.messagesId]\n    } else {\n         return []\n    }\n};\n\n//TODO add draft\nexport class RightColumn extends Component<TProps, TState> {\n    public textareaRef: React.RefObject<HTMLTextAreaElement>;\n\n    constructor(props: TProps) {\n        super(props);\n        this.textareaRef = React.createRef();\n    }\n\n    public state = {\n        textareaValue: ''\n    } \n\n    public componentDidMount() {\n        this.textareaRef.current?.focus();\n    }\n\n    public componentDidUpdate(prevProps: TProps) {\n        if (this.props.selectedChatId !== prevProps.selectedChatId) {\n            this.handleResetTextareaValue()\n        }\n    }\n\n    handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setState({\n            textareaValue: event.target.value\n        })\n    };\n\n    handleClick = (chatMessages: TDataChatMesseges, chatIndex: number): () => void => (): void => {\n        const {\n            sendMessage\n        } = this.props\n        const {\n            textareaValue\n        } = this.state\n        if (textareaValue.trim().length > 0) {\n            const nowDate = new Date()\n            sendMessage({\n                authorId: 3,\n                messageId: shortid.generate(),\n                message: textareaValue,\n                time: `${nowDate.getHours()}:${nowDate.getMinutes()}:${nowDate.getSeconds()}`\n            }, chatMessages, chatIndex)\n\n            this.handleResetTextareaValue()\n            this.textareaRef.current?.focus();\n        }\n    }\n\n    handleResetTextareaValue = () => {\n        this.setState({\n            textareaValue: ''\n        })\n        this.textareaRef.current?.focus();\n    }\n\n    renderPanel = (\n        chatMessages: TDataChatMesseges,\n        chatIndex: number\n    ) => (\n        <div className={'panel'}>\n            <img src='icons/clip.svg' alt='clip' />\n            <textarea\n                className={'panel__textarea'}\n                ref={this.textareaRef} \n                onChange={this.handleChange}\n                placeholder='Write a message...'\n                value={this.state.textareaValue}\n            />\n            <img\n                className={'panel__clip'}\n                src='icons/send.svg'\n                alt='clip'\n                onClick={this.handleClick(chatMessages, chatIndex)}\n            />\n        </div>\n    )\n\n    public render() {\n        const {\n            selectedChatId,\n            authors = [],\n            chats = [],\n            messages = []\n        } = this.props\n        const chatMessages = getChatMessages(selectedChatId, chats, messages)\n        const chatIndex = getIndexChatMessage(selectedChatId, chats)\n\n        return (\n            <div className={'rightColumn'}>\n                <Messages\n                    authors={authors}\n                    chatMessages={chatMessages}\n                />\n                {this.renderPanel(chatMessages, chatIndex)}\n            </div>\n        )\n    }\n}","import shortid from 'shortid'\nimport { loremIpsum } from \"lorem-ipsum\";\n\nexport const PLACEHOLDER_TEXT = 'Please select a chat to start messaging'\n\nexport const CHATS = [\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 0,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 1,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 2,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 3,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 4,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 5,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 6,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 7,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 8,\n        icon: 'react'\n    },\n    {\n        chatId: shortid.generate(),\n        chatName: 'Group chat',\n        messagesId: 9,\n        icon: 'react'\n    }\n]\n\nexport const MESSAGES = [\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '14/3/2020',\n            dateMessages: [\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                }\n            ],\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '15/3/2020',\n            dateMessages:     [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '13/3/2020',\n            dateMessages: [\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '17/3/2020',\n            dateMessages:  [\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '15:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '16:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '17:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '18:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '19:40:06'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '7/6/2019',\n            dateMessages:     [\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '10:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '11:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '12:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '13:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '14:40:06'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '20/1/2020',\n            dateMessages: [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '17/3/2020',\n            dateMessages:     [\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '18/3/2020',\n            dateMessages: [\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '17/3/2020',\n            dateMessages: [\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '19/3/2020',\n            dateMessages: [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '7/6/2019',\n            dateMessages:  [\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '15:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '16:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '17:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '18:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '19:40:06'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '21/6/2019',\n            dateMessages: [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '5/12/2019',\n            dateMessages:     [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '22:40:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '22:45:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:45:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:50:06'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '17/1/2020',\n            dateMessages:     [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:45:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:46:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:47:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:48:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:49:06'\n                }\n            ],\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '20/1/2020',\n            dateMessages: [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '9/2/2020',\n            dateMessages:     [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '8/3/2020',\n            dateMessages: [\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '11/3/2020',\n            dateMessages: [\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ],\n    [\n        {\n            dateMessagesId: shortid.generate(),\n            date: '13/3/2020',\n            dateMessages:     [\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:41:06'\n                },\n                {\n                    authorId: 1,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:42:06'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:43:06'\n                },\n                {\n                    authorId: 2,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:44:06'\n                }\n            ]\n        },\n        {\n            dateMessagesId: shortid.generate(),\n            date: '14/3/2020',\n            dateMessages:     [\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '23:40:06'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '04:47:07'\n                },\n                {\n                    authorId: 0,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:14:31'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '06:49:32'\n                },\n                {\n                    authorId: 3,\n                    messageId: shortid.generate(),\n                    message: loremIpsum({ count: 3 }),\n                    time: '08:38:10'\n                }\n            ]\n        }\n    ]\n]\n\nexport const AUTHORS = [\n    {\n        name: 'The Shrek 1',\n        avatar: 'shrek1.png'\n    },\n    {\n        name: 'The Shrek 2',\n        avatar: 'shrek2.png'\n    },\n    {\n        name: 'Rick Dalton 1',\n        avatar: 'RickDalton1.png'\n    },\n    {\n        name: 'Rick Dalton 2',\n        avatar: 'RickDalton2.png'\n    }\n]","import React, { PureComponent } from 'react';\nimport shortid from 'shortid'\nimport { LeftColumn } from 'components/LeftColumn/LeftColumn';\nimport { RightColumn } from 'components/RightColumn/RightColumn';\n\nimport './Chat.css'\nimport {\n  AUTHORS,\n  CHATS,\n  MESSAGES,\n  PLACEHOLDER_TEXT\n} from './Chat.mock'\n\ntype TAuthor = {\n  name: string,\n  avatar: string\n}\n\nexport type TDataAuthors = TAuthor[];\n\nexport type TDateMessage = {\n  authorId: number,\n  messageId: string,\n  message: string,\n  time: string\n};\n\ntype TChat = {\n  chatId: string,\n  chatName: string,\n  icon: string,\n  messagesId: number\n};\n\nexport type TDataChats = TChat[];\n\nexport type TMessage = {\n  dateMessagesId: string,\n  date: string,\n  dateMessages: TDateMessage[]\n};\n\nexport type TDataChatMesseges = TMessage[];\n\nexport type TDataChatsMesseges = TDataChatMesseges[];\n\ntype TState = {\n  selectedChatId: string,\n  authors: TDataAuthors,\n  chats: TDataChats,\n  messages: TDataChatsMesseges\n}\n\nexport class Chat extends PureComponent<{}, TState>   {\n  public state = {\n    selectedChatId: '',\n    authors: [],\n    chats: [],\n    messages: []\n  }\n\n   componentDidMount = () => {\n     this.setState({\n      authors: AUTHORS,\n      chats: CHATS,\n      messages: MESSAGES\n    })\n  }\n\n  public selectChat = (id: string): () => void => (): void => {\n    if (this.state.selectedChatId === id) {\n      this.setState({ selectedChatId: '' })\n    } else {\n      this.setState({ selectedChatId: id })\n    }\n  }\n\n  public hanleSendMessage = (\n    message: TDateMessage,\n    chatMessages: TDataChatMesseges,\n    chatIndex: number\n  ): void => {\n    let hasCurrentDate = false\n    const nowDate = new Date();\n    const date = `${nowDate.getDate()}/${nowDate.getMonth() + 1}/${nowDate.getFullYear()}`\n    const newChatMessages = chatMessages.map((item) => {\n      if (item.date === date) {\n        item.dateMessages.push(message)\n\n        hasCurrentDate = true\n      }\n\n      return item\n    })\n\n  if (!hasCurrentDate) {\n\n    newChatMessages.push({\n      dateMessagesId: shortid.generate(),\n      date,\n      dateMessages: [message]\n    })\n\n    return this.setState(prevState => ({\n      messages: [\n        ...prevState.messages,\n        prevState.messages[chatIndex] = [...newChatMessages]\n      ]}))\n  }\n\n  this.setState(prevState => ({\n    messages: [\n      ...prevState.messages,\n      [...newChatMessages]\n    ]}))\n  }\n\n  public render() {\n    const {\n      selectedChatId,\n      authors,\n      chats,\n      messages\n    } = this.state\n\n    return (\n      <div className=\"chat\">\n        <LeftColumn\n          selectedChatId={selectedChatId}\n          authors={authors}\n          chats={chats}\n          messages={messages}\n          selectChat={this.selectChat}\n        />\n        {selectedChatId\n         ? <RightColumn\n            selectedChatId={selectedChatId}\n            authors={authors}\n            chats={chats}\n            messages={messages}\n            sendMessage={this.hanleSendMessage}\n          />\n          : <div className=\"chat__placeholder\">\n              <div className=\"chat__placeholder__text\">\n                {PLACEHOLDER_TEXT}\n              </div>\n            </div>\n          }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Chat } from 'components/Chat/Chat'\n\nimport './App.css'\n\nexport const App = () => (\n  <div className=\"app\">\n    <Chat />\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from 'components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}